{"version":3,"sources":["components/Title/Title.styles.js","components/Title/Title.jsx","components/Input/Input.styles.js","components/Input/Input.jsx","components/List/List.styles.js","components/Task/Task.styles.js","components/Task/Task.jsx","common/consts.js","components/List/List.jsx","App.js","index.js"],"names":["StyledTitle","styled","h1","Title","StyledInput","input","Input","addTodo","useState","value","setValue","type","onChange","e","target","onKeyDown","code","handleSubmit","ListWrapper","div","TasksList","TaskWrapper","props","isCompleted","TaskText","DelButton","button","Date","Task","task","removeTodo","completeTodo","id","checked","date","text","onClick","initTasks","nanoid","toISOString","slice","setDate","getDate","List","tasks","setTasks","taskId","prev","filter","sortTodo","concat","map","taskText","item","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de960649.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledTitle = styled.h1`\r\n  font-family: Roboto, sans-serif;\r\n  font-weight: 700;\r\n  font-size: 3rem;\r\n  text-align: center;\r\n`;\r\n","import { StyledTitle } from './Title.styles';\r\n\r\nexport const Title = () => {\r\n  return (\r\n    <div>\r\n      <StyledTitle>TodoList</StyledTitle>\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 100%;\r\n`;\r\n","import { useState } from 'react';\r\nimport { StyledInput } from './Input.styles';\r\n\r\nexport const Input = ({ addTodo }) => {\r\n  const [value, setValue] = useState('');\r\n  const handleSubmit = (e) => {\r\n    if (e.code === 'Enter' && value) {\r\n      addTodo(value);\r\n      setValue('');\r\n    }\r\n  };\r\n  return (\r\n    <StyledInput\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value)}\r\n      onKeyDown={(e) => handleSubmit(e)}\r\n    />\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ListWrapper = styled.div`\r\n  background-color: aliceblue;\r\n  max-width: 600px;\r\n  margin: auto;\r\n`;\r\n\r\nexport const TasksList = styled.div``;\r\n","import styled from 'styled-components';\r\n\r\nexport const TaskWrapper = styled.div`\r\n  background-color: ${(props) => (props.isCompleted ? 'teal' : 'lightpink')};\r\n  text-align: left;\r\n  max-width: 500px;\r\n  margin: auto;\r\n  padding-left: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 40px;\r\n`;\r\n\r\nexport const TaskText = styled.div`\r\n  margin: 0 20px;\r\n`;\r\n\r\nexport const DelButton = styled.button`\r\n  background-color: darkred;\r\n  color: white;\r\n  border-radius: 25%;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  padding-left: 20px;\r\n`;\r\n","import { TaskWrapper, TaskText, DelButton, Date } from './Task.styles';\r\n\r\nexport const Task = ({ task, removeTodo, completeTodo }) => {\r\n  return (\r\n    <TaskWrapper isCompleted={task.isCompleted}>\r\n      <input\r\n        onChange={() => completeTodo(task.id)}\r\n        type=\"checkbox\"\r\n        checked={task.isCompleted}\r\n      />\r\n      <Date>{task.date}</Date>\r\n      <TaskText>{task.text}</TaskText>\r\n      <DelButton onClick={() => removeTodo(task.id)}>x</DelButton>\r\n    </TaskWrapper>\r\n  );\r\n};\r\n","import { nanoid } from \"nanoid\";\n\nexport const initTasks = [\n  {\n    text: \"В вдх ныт\",\n    isCompleted: false,\n    id: nanoid(),\n    date: new Date().toISOString().slice(0, 10),\n  },\n  {\n    text: \"Реакт с некст недели учит\",\n    isCompleted: false,\n    id: nanoid(),\n    date: new Date(new Date().setDate(new Date().getDate() + 7))\n      .toISOString()\n      .slice(0, 10),\n  },\n  {\n    text: \"Пук сренькат\",\n    isCompleted: false,\n    id: nanoid(),\n    date: new Date().toISOString().slice(0, 10),\n  },\n  {\n    text: \"В доту играт\",\n    isCompleted: true,\n    id: nanoid(),\n    date: new Date().toISOString().slice(0, 10),\n  },\n];\n","import { Input } from \"../Input/Input\";\nimport { ListWrapper, TasksList } from \"./List.styles\";\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Task } from \"../Task/Task\";\nimport { initTasks } from \"../../common/consts\";\n\nexport const List = () => {\n  const [tasks, setTasks] = useState(initTasks);\n  const addTodo = (taskText) => {\n    const task = {\n      text: taskText,\n      isCompleted: false,\n      id: nanoid(),\n      date: new Date().toISOString().slice(0, 10),\n    };\n    setTasks((prev: []) => [...prev, task]);\n    sortTodo();\n  };\n  const removeTodo = (taskId) => {\n    setTasks((prev: []) => prev.filter((task) => task.id !== taskId));\n  };\n  const sortTodo = () => {\n    setTasks((prev: []) =>\n      prev\n        .filter((task) => task.isCompleted === false)\n        .concat(prev.filter((task) => task.isCompleted === true))\n    );\n  };\n  const completeTodo = (taskId) => {\n    setTasks((prev: []) =>\n      prev.map((task) =>\n        task.id === taskId ? { ...task, isCompleted: !task.isCompleted } : task\n      )\n    );\n    sortTodo();\n  };\n  return (\n    <ListWrapper>\n      <Input addTodo={addTodo} />\n      <TasksList>\n        {tasks.map((item) => {\n          return (\n            <Task\n              task={item}\n              key={item.id}\n              removeTodo={removeTodo}\n              completeTodo={completeTodo}\n            />\n          );\n        })}\n      </TasksList>\n    </ListWrapper>\n  );\n};\n","import { Title } from './components/Title/Title';\nimport { List } from './components/List/List';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}